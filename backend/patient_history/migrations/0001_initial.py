# Generated by Django 5.0.1 on 2025-10-18 15:34

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("patients", "0001_initial"),
        ("practitioners", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ClinicalRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "record_type",
                    models.CharField(
                        choices=[
                            ("condition", "Condition/Diagnosis"),
                            ("observation", "Clinical Observation"),
                            ("allergy", "Allergy"),
                            ("procedure", "Procedure"),
                            ("family-history", "Family History"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("recurrence", "Recurrence"),
                            ("relapse", "Relapse"),
                            ("inactive", "Inactive"),
                            ("remission", "Remission"),
                            ("resolved", "Resolved"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title or name of the condition/observation",
                        max_length=500,
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        help_text="Medical code (ICD-10, SNOMED, LOINC)",
                        max_length=100,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        help_text="Category (e.g., vital-signs, laboratory, imaging)",
                        max_length=200,
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Detailed description"),
                ),
                (
                    "severity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("mild", "Mild"),
                            ("moderate", "Moderate"),
                            ("severe", "Severe"),
                            ("life-threatening", "Life Threatening"),
                        ],
                        help_text="Severity of condition",
                        max_length=20,
                    ),
                ),
                (
                    "body_site",
                    models.CharField(
                        blank=True, help_text="Body site affected", max_length=200
                    ),
                ),
                (
                    "value_quantity",
                    models.CharField(
                        blank=True,
                        help_text="Measured value (e.g., 120/80, 98.6Â°F)",
                        max_length=100,
                    ),
                ),
                (
                    "value_unit",
                    models.CharField(
                        blank=True, help_text="Unit of measurement", max_length=50
                    ),
                ),
                (
                    "onset_date",
                    models.DateField(
                        blank=True, help_text="When condition started", null=True
                    ),
                ),
                (
                    "resolution_date",
                    models.DateField(
                        blank=True, help_text="When condition resolved", null=True
                    ),
                ),
                (
                    "recorded_date",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this record was created"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, help_text="Additional clinical notes"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "patient",
                    models.ForeignKey(
                        help_text="Patient this record belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="clinical_records",
                        to="patients.patient",
                    ),
                ),
                (
                    "recorded_by",
                    models.ForeignKey(
                        help_text="Practitioner who recorded this",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="recorded_clinical_records",
                        to="practitioners.practitioner",
                    ),
                ),
            ],
            options={
                "verbose_name": "Clinical Record",
                "verbose_name_plural": "Clinical Records",
                "ordering": ["-recorded_date"],
                "indexes": [
                    models.Index(
                        fields=["patient", "-recorded_date"],
                        name="patient_his_patient_589726_idx",
                    ),
                    models.Index(
                        fields=["record_type", "status"],
                        name="patient_his_record__d1cad7_idx",
                    ),
                ],
            },
        ),
    ]
