# Generated by Django 5.0.1 on 2025-10-18 10:48

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Practitioner",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for this practitioner",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "prefix",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Dr.", "Doctor"),
                            ("Prof.", "Professor"),
                            ("Mr.", "Mister"),
                            ("Ms.", "Miss"),
                            ("Mrs.", "Misses"),
                        ],
                        help_text="Name prefix (Dr., Prof., etc.)",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "family_name",
                    models.CharField(help_text="Family name (surname)", max_length=255),
                ),
                (
                    "given_name",
                    models.CharField(
                        help_text="Given name (first name)", max_length=255
                    ),
                ),
                (
                    "middle_name",
                    models.CharField(
                        blank=True,
                        help_text="Middle name(s)",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("other", "Other"),
                            ("unknown", "Unknown"),
                        ],
                        help_text="Administrative gender - male | female | other | unknown",
                        max_length=10,
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(blank=True, help_text="Date of birth", null=True),
                ),
                (
                    "npi",
                    models.CharField(
                        blank=True,
                        help_text="National Provider Identifier (NPI) - unique 10-digit number",
                        max_length=10,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "license_number",
                    models.CharField(
                        blank=True,
                        help_text="Medical license number",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "specialization",
                    models.CharField(
                        help_text="Medical specialization (e.g., Cardiology, Pediatrics, General Practice)",
                        max_length=200,
                    ),
                ),
                (
                    "qualification",
                    models.TextField(
                        help_text="Qualifications and degrees (e.g., MD, PhD, DO)"
                    ),
                ),
                (
                    "years_of_experience",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Years of professional experience",
                        null=True,
                    ),
                ),
                (
                    "address_line",
                    models.CharField(
                        blank=True,
                        help_text="Street address",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "address_city",
                    models.CharField(
                        blank=True, help_text="City", max_length=100, null=True
                    ),
                ),
                (
                    "address_state",
                    models.CharField(
                        blank=True,
                        help_text="State or province",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "address_postal_code",
                    models.CharField(
                        blank=True, help_text="Postal code", max_length=20, null=True
                    ),
                ),
                (
                    "address_country",
                    models.CharField(
                        blank=True, help_text="Country", max_length=100, null=True
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Professional email address",
                        max_length=254,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        help_text="Professional phone number", max_length=50
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this practitioner is currently active",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Record creation timestamp"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Record last update timestamp"
                    ),
                ),
            ],
            options={
                "verbose_name": "Practitioner",
                "verbose_name_plural": "Practitioners",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["family_name", "given_name"],
                        name="practitione_family__278391_idx",
                    ),
                    models.Index(
                        fields=["specialization"], name="practitione_special_6b3dea_idx"
                    ),
                    models.Index(fields=["npi"], name="practitione_npi_6311e6_idx"),
                    models.Index(fields=["email"], name="practitione_email_f9ca9e_idx"),
                ],
            },
        ),
    ]
